plugins {
	id "java"
	id "com.github.johnrengelman.shadow" version "+" apply false
}

group "org.mtr.mod"
version rootProject.properties.version

subprojects {
	apply plugin: "java"
	apply plugin: "com.github.johnrengelman.shadow"

	configurations {
		shadowImplementation
		implementation.extendsFrom shadowImplementation
	}

	dependencies {
		shadowImplementation "org.mtr:Shadow-Libraries-net:0.0.1"
		shadowImplementation "org.mtr:Shadow-Libraries-util:0.0.1"
		shadowImplementation "org.mtr:Minecraft-Mappings-common:0.0.1"
		shadowImplementation "org.mtr:Transport-Simulation-Core:0.0.1"
		shadowImplementation "com.logisticscraft:occlusionculling:+"
		shadowImplementation "io.nayuki:qrcodegen:+"
		compileOnly "com.google.code.findbugs:jsr305:+"
		compileOnly "xyz.jpenilla:squaremap-api:+"
		compileOnly "net.kyori:adventure-api:+"
		compileOnly "com.test:Dynmap:3.2.1"
	}

	repositories {
		flatDir { dirs "../libs" }
		maven { url "https://repo.codemc.org/repository/maven-public" }
	}

	shadowJar {
		configurations = [project.configurations.shadowImplementation]
		minimize {
			exclude(dependency("org.mtr:Shadow-Libraries-net:.*"))
			exclude(dependency("org.mtr:Minecraft-Mappings-common:.*"))
			exclude(dependency("org.mtr:Minecraft-Mappings-fabric-${minecraftVersion}:.*"))
			exclude(dependency("org.mtr:Minecraft-Mappings-forge-${minecraftVersion}:.*"))
		}
		relocate "com.logisticscraft", "org.mtr.libraries.com.logisticscraft"
		relocate "de.javagl", "org.mtr.libraries.de.javagl"
		relocate "io.nayuki", "org.mtr.libraries.io.nayuki"
	}

	tasks.withType(AbstractArchiveTask).configureEach {
		preserveFileTimestamps = false
		reproducibleFileOrder = true
	}

	tasks.withType(Javadoc).tap {
		configureEach { javadoc.options.addStringOption("Xdoclint:none", "-quiet") }
	}
}
